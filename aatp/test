#!/usr/bin/env bash
BUILD=0
build_n_run() {
    if [ $BUILD -eq 1 ]
    then
        docker compose -f $1  --project-directory . build --no-cache
        if [ $? -ne 0 ]
        then
            exit "docker compose build failed"
        fi
    fi
    docker compose -f $1  --project-directory . up --exit-code-from runner
}
usage() {
   cat <<EOS
This script runs the acceptance test procedures

Syntax: scriptTemplate [-h|b] <test_path>
options:

h     Print this usage"
b     Build the docker images from scratch before running"

EOS
}

exit_error() {
    usage
    exit 1
}
env GOOS="linux" go build -v .
if [ $? -ne 0 ]
then
    exit "go build failed"
fi

while getopts ":bh" option; do
    echo "option " $option
   case $option in
      h) # display usage
         usage
         exit;;
      b) # Build
         BUILD=1
         ;;
      \?) # Invalid option
         echo "Error: Invalid option"
         exit_error;;
   esac
done
shift $((OPTIND-1))
if [ $# -eq 0 ]
then
    for compose in `find aatp -name "lab.yaml"`
    do
        dir=$(dirname $compose)
        echo ">>> Setting a lab based on $dir"
        build_n_run $compose
        if [ $? -ne 0 ]
        then
            echo ">>> $dir tests FAILED"
             exit 4
        fi
    done
else
    for arg in $@
    do
        echo ">>> Setting a lab based on $arg"
        build_n_run $arg/lab.yaml
        if [ $? -ne 0 ]
        then
             echo ">>> $arg FAILED"
             exit 4
        fi
        echo ">>> $arg tests PASSED"
    done
fi
